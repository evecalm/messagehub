/*!
 * @evecalm/message-hub v1.0.7
 * CopyrightÂ© 2021 Saiya https://github.com/oe/messagehub
 */
!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):e.MessageHub=n()}(this,function(){"use strict";const e=Math.random().toString(36).slice(2),n=self;let t=0;const s="undefined"==typeof document,o=[["*",{}]],i=[];n.addEventListener("message",f);const r={WINDOW_ID:e,on(e,n){const t=o.find(n=>n[0]===e);if(t){const e=t[1];t[1]="function"==typeof e?n:"function"==typeof n?n:Object.assign({},e,n)}else e instanceof Worker&&!i.includes(e)&&(i.push(e),e.addEventListener("message",f)),o["*"===e?"unshift":"push"]([e,n])},off(e){const n=o.findIndex(n=>n[0]===e);if(-1!==n&&("*"===e?o[n][1]={}:o.splice(n,1)),e instanceof Worker){e.removeEventListener("message",f);const n=i.indexOf(e);n>-1&&i.splice(n,1)}},emit(o,i,...r){const c=function(n,s){return{winID:e,msgID:++t,type:"request",methodName:n,args:s}}(i,r);return a(o,c),new Promise((e,t)=>{const i=!s&&o instanceof Worker?o:n,r=n=>{const s=n.data;(function(e,n){return e&&e&&n.winID===e.winID&&n.msgID===e.msgID&&"response"===n.type})(c,s)&&(i.removeEventListener("message",r),s.isSuccess?e(s.data):t(s.data))};i.addEventListener("message",r)})},createDedicatedMessageHub(e){let n=e;const t=()=>{if(!n)throw new Error("peer is not set in dedicated message-hub")};return{setPeer:e=>{n=e},emit:(e,...s)=>(t(),r.emit(n,e,...s)),on:(e,s)=>{t();const o="string"==typeof e?{[e]:s}:e;r.on(n,o)},off:e=>{if(t(),!e)return r.off(n);const s=o.find(e=>e[0]===n);s&&delete s[e]}}}};function c(e,n,t){return{winID:n.winID,msgID:n.msgID,type:"response",isSuccess:t,data:e}}async function f(t){const s=t.data,i=t.source||t.currentTarget||n;if(function(n){return n&&n.winID&&n.winID!==e&&n.msgID&&"request"===n.type}(s)&&i)try{const e=o.find(e=>e[0]===i)||o[0],{methodName:n,args:t}=s,r=e&&e[1],f="function"==typeof r?r:r&&r[n];if("function"!=typeof f)throw console.warn(`[MessageHub] no corresponding handler found for ${n}, message from`,i),new Error(`[MessageHub] no corresponding handler found for ${n}`);const u=await f.apply(null,t);a(i,c(u,s,!0))}catch(e){a(i,c(e,s,!1))}}function a(e,n){const t=[n];"function"==typeof Window&&e instanceof Window&&t.push("*"),e.postMessage(...t)}return r});
